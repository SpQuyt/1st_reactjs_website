{"version":3,"sources":["logo.svg","Screen/App/App.js","Screen/Login/Login.js","Component/ItemCard/ItemCard.js","Component/ListItem/ListItem.js","Screen/Home/Home.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","location","state","hasagi","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","theme","createMuiTheme","palette","primary","red","typography","useNextVariants","data","name","age","Login","_this","handleClick","browserHistory","push","pathname","redirect","styles","TextField_default","margin","label","variant","id","Button_default","style","onClick","ItemCard","Typography_default","color","ListItem","GridList_default","cellHeight","dataList","map","result","ItemCard_ItemCard_ItemCard","Home","setState","ListItem_ListItem_ListItem","Boolean","window","hostname","match","render","es","history","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6dd114f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from '../../logo.svg';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { hasagi } = this.props.location.state;\n    // console.log(hasagi)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </div>\n      </div>\n    );\n  }\n  \n}\n","import React, { Component } from 'react';\nimport './Login.css';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { green, red, black } from '@material-ui/core/colors';\nimport { browserHistory } from 'react-router';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n  },\n  typography: { useNextVariants: true },\n});\n\nconst data = [\n  {\n    name: 'Truong Anh Quoc',\n    age: 20\n  },\n  {\n    name: 'Vu Thu Huong',\n    age: 21\n  },\n  {\n    name: 'Bui Phuong Ha',\n    age: 21\n  },\n  {\n    name: 'Nguyen Mai Chi',\n    age: 21\n  },\n  {\n    name: 'Dau Nguyen Yen Nhi',\n    age: 20\n  },\n  {\n    name: 'Dao Trung Kien',\n    age: 21\n  },\n  {\n    name: 'Dang Huong Mai',\n    age: 21\n  },\n  {\n    name: 'Nguyen Thu Thuy',\n    age: 21\n  }\n]\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n    }\n  }  \n\n  handleClick = () => {\n    browserHistory.push({\n      pathname: '/Home',\n      state: {\n        data: data\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Screen\">\n        <div className=\"Login-box\">\n          <header className=\"Login-title\">Đăng nhập</header>\n          <div className='Login-input-group'>\n            <MuiThemeProvider theme={theme}>\n              <TextField\n                margin='dense'\n                className='Login-input'\n                label=\"Username\"\n                variant=\"outlined\"\n                id=\"mui-theme-provider-outlined-input\"\n              />\n              <TextField\n                margin='dense'\n                className='Login-input'\n                label=\"Password\"\n                variant=\"outlined\"\n                id=\"mui-theme-provider-outlined-input\"\n              />\n            </MuiThemeProvider>\n          </div>\n\n          <Button\n            variant=\"contained\"\n            style={{ margin: 16 }}\n            onClick={this.handleClick}\n          >\n            LOGIN\n          </Button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n","import React, { Component } from 'react';\r\nimport './ItemCard.css';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport default class ItemCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Card-container\">\r\n        <div className=\"Card-footer\">\r\n          <Typography className=\"Name\" color=\"textPrimary\">\r\n            {this.props.name}\r\n          </Typography>\r\n          <Typography className=\"Age\" color=\"textPrimary\">\r\n            {this.props.age}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItemCard.propTypes = {\r\n  name: PropTypes.string,\r\n  age: PropTypes.number,\r\n  // avatar: PropTypes.string\r\n}","import React, { Component } from 'react';\r\nimport './ListItem.css';\r\nimport ItemCard from '../ItemCard/ItemCard';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ListItem extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        <GridList className=\"List-container\" cellHeight={10}>\r\n          {this.props.dataList.data.map(function (result) {\r\n            return (<ItemCard name={result.name} age={result.age} />)\r\n          })}\r\n        </GridList>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nListItem.propTypes = {\r\n  dataList: PropTypes.object,\r\n}","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport ListItem from '../../Component/ListItem/ListItem';\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      data: this.props.location.state\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ListItem dataList={this.state.data}/>\r\n      </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './Screen/App/App';\nimport Login from './Screen/Login/Login';\nimport Home from './Screen/Home/Home';\nimport * as serviceWorker from './serviceWorker';\nimport {Router, Route, browserHistory} from 'react-router';\n\nrender(\n  <Router history={browserHistory}>\n    <Route path=\"/\" component={Login}/>\n    <Route path=\"/App\" component={App}/>\n    <Route path=\"/Home\" component={Home}/>\n    \n  </Router>\n, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}